<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ldlsn</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-24T06:02:17.664Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ldlsn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NOI2014魔法森林</title>
    <link href="http://yoursite.com/2018/04/24/%E9%AD%94%E6%B3%95%E6%A3%AE%E6%9E%97/"/>
    <id>http://yoursite.com/2018/04/24/魔法森林/</id>
    <published>2018-04-24T05:43:53.000Z</published>
    <updated>2018-04-24T06:02:17.664Z</updated>
    
    <content type="html"><![CDATA[<p>数据结构,这是坠吼滴.</p> <a id="more"></a><p>原题求一条双关键字最小瓶颈路径,从1到n.</p><p>如果本题是单关键字的话很好办,直接用kruskal的做法处理最小生成树即可.</p><p>双关键字如何处理呢?</p><p>先按a为关键字排序,然后加入一条边时会形成一个环,找到环上b最大的断开,然后如果点1和点n联通就更新答案.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> size 500010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> E  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc getchar()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> db double</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,n) for (register int i=s;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> drep(i,n,s) for (register int i=n;i&gt;=s;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> il inline</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">il ll <span class="title">r</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c; ll x,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (c=gc;!<span class="built_in">isdigit</span>(c);c=gc) <span class="keyword">if</span> (c==<span class="string">'-'</span>) f=<span class="number">-1</span>; x=c-<span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">for</span> (c=gc;<span class="built_in">isdigit</span>(c);c=gc) x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+c-<span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> f*x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y,a,b;</span><br><span class="line">&#125;e[size];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ch[size][<span class="number">2</span>],fa[size],mx[size],f[size],w[size],n,m,ans=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">bool</span> rev[size];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(edge u,edge v)</span></span>&#123;<span class="keyword">return</span> (u.a&lt;v.a);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (f[x]==x) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!x) <span class="keyword">return</span>;</span><br><span class="line">rev[x]^=<span class="number">1</span>;</span><br><span class="line">swap(ch[x][<span class="number">0</span>],ch[x][<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">upd</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mx[x]=x;</span><br><span class="line"><span class="keyword">if</span> (w[mx[ch[x][<span class="number">0</span>]]]&gt;w[mx[x]]) mx[x]=mx[ch[x][<span class="number">0</span>]];</span><br><span class="line"><span class="keyword">if</span> (w[mx[ch[x][<span class="number">1</span>]]]&gt;w[mx[x]]) mx[x]=mx[ch[x][<span class="number">1</span>]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushc</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (rev[x])</span><br><span class="line">&#123;</span><br><span class="line">reverse(ch[x][<span class="number">0</span>]);</span><br><span class="line">reverse(ch[x][<span class="number">1</span>]);</span><br><span class="line">rev[x]^=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isrt</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (ch[fa[x]][<span class="number">0</span>]!=x) &amp;&amp; (ch[fa[x]][<span class="number">1</span>]!=x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!isrt(x)) modify(fa[x]);</span><br><span class="line">pushc(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dir</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> ch[fa[x]][<span class="number">1</span>]==x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findrt</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (fa[x]) x=fa[x];</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> findrt(x)==findrt(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rtt</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y=fa[x],z=fa[y],b=dir(x),c=dir(y);</span><br><span class="line"><span class="keyword">if</span> (isrt(y)) fa[x]=z;</span><br><span class="line"><span class="keyword">else</span> fa[x]=z,ch[z][c]=x;</span><br><span class="line">ch[y][b]=ch[x][!b];fa[ch[x][!b]]=y;</span><br><span class="line">ch[x][!b]=y;fa[y]=x;</span><br><span class="line">upd(y);upd(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">modify(x); </span><br><span class="line"><span class="keyword">while</span> (!isrt(x))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y=fa[x],b=dir(x),c=dir(y);</span><br><span class="line"><span class="keyword">if</span> (isrt(y)) rtt(x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (b^c) rtt(x),rtt(x);</span><br><span class="line"><span class="keyword">else</span> rtt(y),rtt(x);</span><br><span class="line">&#125;</span><br><span class="line">upd(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">il <span class="keyword">int</span> <span class="title">access</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (;x;y=x,x=fa[x]) splay(x),ch[x][<span class="number">1</span>]=y,upd(x);</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">il <span class="keyword">int</span> <span class="title">makert</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;access(x); splay(x); reverse(x);&#125;</span><br><span class="line"><span class="function">il <span class="keyword">void</span> <span class="title">link</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;<span class="keyword">if</span> (!query(x,y)) makert(x),fa[x]=y;&#125;</span><br><span class="line"><span class="function">il <span class="keyword">void</span> <span class="title">cut</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;<span class="keyword">if</span> (query(x,y)) makert(x),access(x),splay(y),fa[y]=<span class="number">0</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">il <span class="keyword">int</span> <span class="title">getmx</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">makert(x); access(y); splay(x); <span class="keyword">return</span> mx[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=r(); m=r();  rep(i,<span class="number">1</span>,n) f[i]=i;</span><br><span class="line">rep(i,<span class="number">1</span>,m) e[i].x=r(),e[i].y=r(),e[i].a=r(),e[i].b=r();</span><br><span class="line">sort(e+<span class="number">1</span>,e+m+<span class="number">1</span>,cmp);</span><br><span class="line">rep(i,<span class="number">1</span>,m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> f1=find(e[i].x),f2=find(e[i].y);</span><br><span class="line"><span class="keyword">if</span> (f1==f2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t=getmx(e[i].x,e[i].y);</span><br><span class="line"><span class="keyword">if</span> (w[t]&gt;e[i].b) cut(t,e[t-n].x),cut(t,e[t-n].y);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">continue</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> f[f1]=f2;</span><br><span class="line">w[i+n]=e[i].b; mx[i+n]=e[i].b;</span><br><span class="line">link(e[i].x,n+i); link(e[i].y,n+i);</span><br><span class="line"><span class="keyword">if</span> (find(<span class="number">1</span>)==find(n)) ans=min(ans,e[i].a+w[getmx(<span class="number">1</span>,n)]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ans&gt;<span class="number">1e9</span>) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>); <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数据结构,这是坠吼滴.&lt;/p&gt;
    
    </summary>
    
    
      <category term="OI" scheme="http://yoursite.com/tags/OI/"/>
    
      <category term="NOI" scheme="http://yoursite.com/tags/NOI/"/>
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>NOIP十大难题</title>
    <link href="http://yoursite.com/2018/04/19/NOIP%E5%8D%81%E5%A4%A7%E9%9A%BE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/04/19/NOIP十大难题/</id>
    <published>2018-04-19T07:34:19.000Z</published>
    <updated>2018-04-20T03:35:27.059Z</updated>
    
    <content type="html"><![CDATA[<p>自从本蒟蒻知道有NOIP这个比赛以后,就一直非常慌,害怕爆零,<del>结果还是爆零了</del>.</p><p>那么NOIP有趣的题目都有什么呢qwq…</p> <a id="more"></a><h2 id="TOP-10-NOIP2012-疫情控制"><a href="#TOP-10-NOIP2012-疫情控制" class="headerlink" title="TOP 10. NOIP2012 疫情控制"></a>TOP 10. NOIP2012 疫情控制</h2><p>花了一上午敲完又花了一节课卡进1s<del>其实是因为心态崩了干脆开了O2优化</del></p><p>这道题的想法是</p><p>(暴力)</p><p>枚举所花费的时间,然后让军队暴力地向上跳</p><p>发现这两步都能优化</p><p>如果$T$秒可以部署完所有军队,$T+1$显然也行,只是浪费一些</p><p>据此可以二分答案.</p><p>然后跳跃也可以像找LCA那样倍增预处理</p><p>然后还需要一步贪心:</p><p>对于一个点,如果军队还能走的步数多,那么优先考虑用这些军队去建立检查站.</p><p>蒟蒻的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">#define siz 500010</span><br><span class="line">#define debug(x) cerr&lt;&lt;#x&lt;&lt;&quot;=&quot;&lt;&lt;x</span><br><span class="line">#define gc getchar()</span><br><span class="line">#define tp to[p]</span><br><span class="line">#define ll long long</span><br><span class="line">#define rep(i,s,n) for (register int i=s;i&lt;=n;i++)</span><br><span class="line">#define drep(i,n,s) for (register int i=n;i&gt;=s;i--)</span><br><span class="line">#define il inline</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">il ll r()</span><br><span class="line">&#123;</span><br><span class="line">char c; ll x,f=1;</span><br><span class="line">for (c=gc;!isdigit(c);c=gc) if (c==&apos;-&apos;) f=-1; x=c-&apos;0&apos;;</span><br><span class="line">for (c=gc;isdigit(c);c=gc) x=(x&lt;&lt;1)+(x&lt;&lt;3)+c-&apos;0&apos;;</span><br><span class="line">return f*x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int head[siz],to[siz],nxt[siz],num,len[siz],A[siz],B[siz];</span><br><span class="line">int f[siz][25],dep[siz],n,m,rt,loc[siz];</span><br><span class="line">ll g[siz][25],dis[siz],pos[siz],rem[siz];</span><br><span class="line">bool sfi[siz],vis[siz],isleaf[siz],vis2[siz],sta[siz];</span><br><span class="line">vector&lt;int&gt; tank[siz];</span><br><span class="line"></span><br><span class="line">void add(int x,int y,int z)</span><br><span class="line">&#123;</span><br><span class="line">num++; to[num]=y; len[num]=z; nxt[num]=head[x];head[x]=num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void dfs(int x)</span><br><span class="line">&#123;</span><br><span class="line">bool fg=0;</span><br><span class="line">    for (int p=head[x];p;p=nxt[p])</span><br><span class="line">      if (!vis[tp])</span><br><span class="line">      &#123;</span><br><span class="line">      fg=1;dep[tp]=dep[x]+1;dis[tp]=dis[x]+len[p];</span><br><span class="line">  f[tp][0]=x;g[tp][0]=len[p];vis[tp]=1;dfs(tp);</span><br><span class="line">      &#125;</span><br><span class="line">    if (!fg) isleaf[x]=1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void bz()</span><br><span class="line">&#123;</span><br><span class="line">    rep(j,1,16) rep(i,1,n) f[i][j]=f[f[i][j-1]][j-1];</span><br><span class="line">    rep(j,1,16) rep(i,1,n) g[i][j]=g[i][j-1]+g[f[i][j-1]][j-1]; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool cmp1(int x,int y) &#123;return dis[x]&lt;dis[y];&#125;</span><br><span class="line">bool cmp2(int x,int y) &#123;return rem[x]&lt;rem[y];&#125;</span><br><span class="line"></span><br><span class="line">bool isclean(int x,int fa)</span><br><span class="line">&#123;</span><br><span class="line">if (isleaf[x])</span><br><span class="line">if (!sfi[x]) return sta[x]=0;</span><br><span class="line">else return sta[x]=1;</span><br><span class="line">sta[x]=1;</span><br><span class="line">for (int p=head[x];p;p=nxt[p])</span><br><span class="line">if (tp!=fa&amp;&amp;!sfi[tp]&amp;&amp;!isclean(tp,x)) sta[x]=0; </span><br><span class="line">return sta[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool judge(ll road)&#123;</span><br><span class="line">    memset(sfi,0,sizeof(sfi));</span><br><span class="line">    int ant=0,bnt=0;</span><br><span class="line">    for(int p=head[1];p;p=nxt[p]) tank[tp].clear();</span><br><span class="line">    for(int i=1;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        int x=pos[i];ll k=road;</span><br><span class="line">        if(x==1)</span><br><span class="line">&#123;</span><br><span class="line">            B[++bnt]=i;</span><br><span class="line">            rem[i]=k;</span><br><span class="line">            continue;    </span><br><span class="line">        &#125;</span><br><span class="line">        for(int j=20;j&gt;=0;j--)</span><br><span class="line">        if(f[x][j]&gt;1&amp;&amp;g[x][j]&lt;=k)</span><br><span class="line">&#123;</span><br><span class="line">            k-=g[x][j];</span><br><span class="line">            x=f[x][j];</span><br><span class="line">            if(!k)break;</span><br><span class="line">        &#125;</span><br><span class="line">        rem[i]=k;</span><br><span class="line">        if(f[x][0]==1&amp;&amp;g[x][0]&lt;rem[i])</span><br><span class="line">&#123;</span><br><span class="line">            rem[i]-=g[x][0];</span><br><span class="line">            tank[x].push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">        else sfi[x]=true,sta[x]=true; </span><br><span class="line">    &#125;</span><br><span class="line">    bool b=isclean(1,-1);</span><br><span class="line">    if(sta[1])return true;</span><br><span class="line">    for(int p=head[1];p;p=nxt[p])</span><br><span class="line">&#123;      </span><br><span class="line">        if(!sta[tp]) A[++ant]=tp;</span><br><span class="line">        for(int x=0;x&lt;tank[tp].size();x++)B[++bnt]=tank[tp][x],loc[tank[tp][x]]=tp;</span><br><span class="line">    &#125;</span><br><span class="line">    if(bnt&lt;ant)return false;</span><br><span class="line">    sort(A+1,A+ant+1,cmp1);</span><br><span class="line">    sort(B+1,B+bnt+1,cmp2); </span><br><span class="line">    int posA=1,posB=1;</span><br><span class="line">    while(posB&lt;=bnt&amp;&amp;posA&lt;=ant)&#123;</span><br><span class="line">        if(sta[A[posA]])&#123; posA++; continue; &#125;</span><br><span class="line">        while(rem[B[posB]]&lt;dis[A[posA]]&amp;&amp;posB&lt;=bnt&amp;&amp;loc[B[posB]]!=A[posA]) </span><br><span class="line">sta[loc[B[posB++]]]=true;</span><br><span class="line">        if(posB&gt;bnt)break;</span><br><span class="line">        posB++;posA++;</span><br><span class="line">    &#125;</span><br><span class="line">    while(sta[A[posA]]&amp;&amp;posA&lt;=ant)posA++;</span><br><span class="line">    return posA&gt;ant;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">n=r(); rt=1;</span><br><span class="line">rep(i,1,n-1) </span><br><span class="line">&#123;</span><br><span class="line">int x=r(),y=r(),z=r(); add(x,y,z); add(y,x,z);</span><br><span class="line">&#125; </span><br><span class="line">dep[rt]=1; vis[rt]=1;  dfs(rt);bz(); m=r();</span><br><span class="line">rep(i,1,m) pos[i]=r(); </span><br><span class="line">ll lb=0,rb=1e15,mid,ans=-1;</span><br><span class="line">while (lb&lt;=rb)</span><br><span class="line">&#123;</span><br><span class="line">mid=(lb+rb)&gt;&gt;1;</span><br><span class="line">if (judge(mid)) ans=mid,rb=mid-1;</span><br><span class="line">else lb=mid+1;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TOP-9-NOIP2017-逛公园"><a href="#TOP-9-NOIP2017-逛公园" class="headerlink" title="TOP 9. NOIP2017 逛公园"></a>TOP 9. NOIP2017 逛公园</h2><p>世界上最遥远的距离,就是我和正解只差了一个map.</p><p>建反图,对于每个点以其为起点,用更改权值的k搜过去,统计答案.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// luogu-judger-enable-o2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 1e9+9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> size 400010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) cerr&lt;&lt;#x&lt;&lt;<span class="meta-string">"="</span>&lt;&lt;x</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc getchar()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> db double</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,n) for (register int i=s;i&lt;=n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> drep(i,n,s) for (register int i=n;i&gt;=s;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> il inline</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tp to[i]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tx tox[i]</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; dl;</span><br><span class="line"><span class="keyword">int</span> head[size],to[size],nxt[size],len[size],headx[size],tox[size],nxtx[size],lenx[size],num;</span><br><span class="line"><span class="keyword">bool</span> vis[size],used[size][<span class="number">60</span>],flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> q[size],ans=<span class="number">0</span>;</span><br><span class="line">ll dis[size],f[size][<span class="number">60</span>],n,m,k,P;</span><br><span class="line"></span><br><span class="line"><span class="function">il <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">num++;to[num]=y;len[num]=z;nxt[num]=head[x];head[x]=num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">il <span class="keyword">void</span> <span class="title">edge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">num++;tox[num]=y;lenx[num]=z;nxtx[num]=headx[x];headx[x]=num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">il ll <span class="title">r</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c; ll x,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (c=gc;!<span class="built_in">isdigit</span>(c);c=gc) <span class="keyword">if</span> (c==<span class="string">'-'</span>) f=<span class="number">-1</span>; x=c-<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">for</span> (c=gc;<span class="built_in">isdigit</span>(c);c=gc) x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+c-<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">return</span> f*x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">il <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">0</span>,<span class="keyword">sizeof</span>(head));<span class="built_in">memset</span>(headx,<span class="number">0</span>,<span class="keyword">sizeof</span>(headx));num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">200000</span>;i++) dis[i]=inf;ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));<span class="built_in">memset</span>(used,<span class="number">0</span>,<span class="keyword">sizeof</span>(used));</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">il <span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(!dl.empty()) dl.pop();</span><br><span class="line">    dl.push(<span class="number">1</span>);</span><br><span class="line">    vis[<span class="number">1</span>]=<span class="number">1</span>,dis[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!dl.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=dl.front();</span><br><span class="line">        dl.pop();</span><br><span class="line">        vis[x]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=nxt[i])</span><br><span class="line">        <span class="keyword">if</span>(dis[to[i]]&gt;dis[x]+len[i])</span><br><span class="line">        &#123;</span><br><span class="line">            dis[to[i]]=dis[x]+len[i];</span><br><span class="line">            <span class="keyword">if</span>(!vis[to[i]]) vis[to[i]]=<span class="number">1</span>,dl.push(to[i]);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> lim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!flag) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(~f[x][lim]) <span class="keyword">return</span> f[x][lim];</span><br><span class="line">    used[x][lim]=<span class="number">1</span>;</span><br><span class="line">    f[x][lim]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=headx[x];i;i=nxtx[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp=tox[i];</span><br><span class="line">        <span class="keyword">int</span> nowrest=dis[x]-dis[tmp]+lim-lenx[i];</span><br><span class="line">        <span class="keyword">if</span>(nowrest&lt;<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(used[tmp][nowrest]) </span><br><span class="line">        &#123;</span><br><span class="line">           flag=<span class="number">0</span>;    </span><br><span class="line">           <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        f[x][lim]=(f[x][lim]+solve(tmp,nowrest))%P;</span><br><span class="line">    &#125;</span><br><span class="line">    used[x][lim]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> f[x][lim];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T=r();</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        init();n=r(),m=r(),k=r(),P=r();</span><br><span class="line">        rep(i,<span class="number">1</span>,m)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x,y,z;</span><br><span class="line">            x=r(),y=r(),z=r();</span><br><span class="line">            add(x,y,z);edge(y,x,z);</span><br><span class="line">        &#125;</span><br><span class="line">        spfa();f[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k&amp;&amp;flag;i++) ans=(ans+solve(n,i))%P;</span><br><span class="line">        <span class="keyword">if</span> (!flag) ans=<span class="number">-1</span>; <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从本蒟蒻知道有NOIP这个比赛以后,就一直非常慌,害怕爆零,&lt;del&gt;结果还是爆零了&lt;/del&gt;.&lt;/p&gt;
&lt;p&gt;那么NOIP有趣的题目都有什么呢qwq…&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="OI" scheme="http://yoursite.com/tags/OI/"/>
    
      <category term="NOIP" scheme="http://yoursite.com/tags/NOIP/"/>
    
      <category term="题解" scheme="http://yoursite.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>ldlsn</title>
    <link href="http://yoursite.com/2018/04/18/ldlsn/"/>
    <id>http://yoursite.com/2018/04/18/ldlsn/</id>
    <published>2018-04-18T13:44:53.000Z</published>
    <updated>2018-04-19T12:27:37.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="欢迎来到ldlsn的世界"><a href="#欢迎来到ldlsn的世界" class="headerlink" title="欢迎来到ldlsn的世界."></a>欢迎来到ldlsn的世界.</h2><p> 这里是一个qdez的小透明,爱好是语言,翻译和OI.</p>  <a id="more"></a><p>Shall I compare thee to a summer’s day?<br>Thou art more lovely and more temperate.<br>Rough winds do shake the darling buds of May,<br>And summer’s lease hath all too short a date.<br>Sometime too hot the eye of heaven shines,<br>And often is his gold complexion dimm’d;<br>And every fair from fair sometime declines,<br>By chance or nature’s changing course untrimm’d;<br>But thy eternal summer shall not fade<br>Nor lose possession of that fair thou ow’st;<br>Nor shall Death brag thou wander’st in his shade,<br>When in eternal lines to time thou grow’st:<br>So long as men can breathe or eyes can see,<br>So long lives this, and this gives life to thee.</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;欢迎来到ldlsn的世界&quot;&gt;&lt;a href=&quot;#欢迎来到ldlsn的世界&quot; class=&quot;headerlink&quot; title=&quot;欢迎来到ldlsn的世界.&quot;&gt;&lt;/a&gt;欢迎来到ldlsn的世界.&lt;/h2&gt;&lt;p&gt; 这里是一个qdez的小透明,爱好是语言,翻译和OI.&lt;/p&gt;
    
    </summary>
    
      <category term="life" scheme="http://yoursite.com/categories/life/"/>
    
    
      <category term="life" scheme="http://yoursite.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>Again</title>
    <link href="http://yoursite.com/2018/04/17/Again/"/>
    <id>http://yoursite.com/2018/04/17/Again/</id>
    <published>2018-04-17T03:49:25.000Z</published>
    <updated>2018-04-23T06:36:58.524Z</updated>
    
    <content type="html"><![CDATA[<p>这里是ldlsn.</p><p>​                      $ Na_2S_2O_3 $</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里是ldlsn.&lt;/p&gt;
&lt;p&gt;​                      $ Na_2S_2O_3 $&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="OI" scheme="http://yoursite.com/tags/OI/"/>
    
      <category term="life" scheme="http://yoursite.com/tags/life/"/>
    
  </entry>
  
</feed>
